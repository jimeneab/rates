{"ast":null,"code":"var _jsxFileName = \"/Users/abrahamtalavera/Projects/rates/rates/src/components/plotForm/plotForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Legend, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlotForm() {\n  _s();\n\n  const url = 'http://data.fixer.io/api/';\n  const access_key = '2fe0ad1d7c24d0016498ef8ec7b86137';\n  let [dates, setDates] = useState([]);\n  let [dummy, setDummy] = useState([]);\n  const data = [{\n    date: '2020-05-03',\n    CAD: 1.2,\n    MXN: 27,\n    GBP: .88,\n    USD: 1.09\n  }, {\n    date: '2020-05-04',\n    CAD: 1.2,\n    MXN: 27,\n    GBP: .88,\n    USD: 1.09\n  }, {\n    date: '2020-05-05',\n    CAD: 1.2,\n    MXN: 27,\n    GBP: .88,\n    USD: 1.09\n  }, {\n    date: '2020-05-06',\n    CAD: 1.2,\n    MXN: 27,\n    GBP: .88,\n    USD: 1.09\n  }];\n\n  function getHistoricalRates(date) {\n    axios.get(`${url}${date}?access_key=${access_key}&symbols=${'MXN,CAD,USD,GBP'}`).then(res => {\n      setDummy([...dummy, {\n        'date': res.data.date\n      }, res.data.rates]);\n      console.log(res);\n    });\n  }\n\n  function handleDatePicker(e) {\n    const value = e.target.value;\n    setDates([...dates, value]);\n  }\n\n  function handlePlot() {\n    if (dates.length > 0) {\n      dates.map(date => {\n        return getHistoricalRates(date);\n      });\n    } else {\n      console.log('Seleccione fecha');\n    }\n  }\n\n  console.log(dummy);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Indicate 4 dates:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: handleDatePicker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePlot,\n            children: \"Plot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Clean\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: dates.map((date, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 600,\n        height: 300,\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"#ccc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          angle: 30,\n          tick: {\n            stroke: 'red',\n            strokeWidth: 0.5\n          },\n          label: \"Fecha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"MXN\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotoneX\",\n          dataKey: \"CAD\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotoneY\",\n          dataKey: \"USD\",\n          stroke: \"#000000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"linear\",\n          dataKey: \"GBP\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlotForm, \"sfxbidAzefK/9OCcbapDvdjpFys=\");\n\n_c = PlotForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlotForm\");","map":{"version":3,"sources":["/Users/abrahamtalavera/Projects/rates/rates/src/components/plotForm/plotForm.js"],"names":["React","useState","axios","LineChart","Line","CartesianGrid","XAxis","YAxis","Legend","Tooltip","PlotForm","url","access_key","dates","setDates","dummy","setDummy","data","date","CAD","MXN","GBP","USD","getHistoricalRates","get","then","res","rates","console","log","handleDatePicker","e","value","target","handlePlot","length","map","preventDefault","index","stroke","strokeWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Legend, Tooltip } from 'recharts';\n\nexport default  function PlotForm(){\n    const url = 'http://data.fixer.io/api/'\n    const access_key = '2fe0ad1d7c24d0016498ef8ec7b86137'\n    let [dates,setDates] = useState([]);\n    let [dummy,setDummy] = useState([]);\n    const data = [{date: '2020-05-03', CAD: 1.2, MXN: 27, GBP:.88, USD: 1.09},{date: '2020-05-04', CAD: 1.2, MXN: 27, GBP:.88, USD: 1.09},{date: '2020-05-05', CAD: 1.2, MXN: 27, GBP:.88, USD: 1.09},{date: '2020-05-06', CAD: 1.2, MXN: 27, GBP:.88, USD: 1.09}];\n\n\n    function getHistoricalRates(date){\n        axios.get(`${url}${date}?access_key=${access_key}&symbols=${'MXN,CAD,USD,GBP'}`)\n        .then(res => {\n            setDummy([...dummy, {'date': res.data.date}, res.data.rates])\n\n          console.log(res);\n        })\n    }\n\n    function handleDatePicker(e){\n        const value = e.target.value\n        setDates([...dates, value])\n    }\n\n    function handlePlot(){\n        if(dates.length > 0) {\n            dates.map(date => {\n                return getHistoricalRates(date);\n            })\n        } else {\n            console.log('Seleccione fecha')\n        }\n    }\n\n    console.log(dummy)\n\n    return(\n        <div>\n            <div>\n                <h4>Indicate 4 dates:</h4>\n                <form onSubmit={(e) => e.preventDefault()}>\n                    <input type={\"date\"} onChange={handleDatePicker} />\n                    <div>\n                        <button onClick={handlePlot}>Plot</button>\n                        <button>Clean</button>\n                    </div>\n                </form>\n            </div>\n            <div>\n                {dates.map((date, index) => {\n                    return <p key={index}>{date}</p>\n                })}\n            </div>\n            <div>\n                <LineChart width={600} height={300} data={data}>\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis dataKey=\"date\" angle={30} tick={{stroke: 'red', strokeWidth: 0.5}} label={\"Fecha\"} />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"MXN\" stroke=\"#8884d8\" />\n                <Line type=\"monotoneX\" dataKey=\"CAD\" stroke=\"#82ca9d\" />\n                <Line type=\"monotoneY\" dataKey=\"USD\" stroke=\"#000000\" />\n                <Line type=\"linear\" dataKey=\"GBP\" stroke=\"#82ca9d\" />\n                </LineChart>\n            </div>\n        </div>\n            \n    )\n}"]},"metadata":{},"sourceType":"module"}