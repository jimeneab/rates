{"ast":null,"code":"var _jsxFileName = \"/Users/abrahamtalavera/Projects/rates/rates/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport Navbar from './components/navbar/Navbar';\nimport DatePicker from './components/datePicker/DatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const url = 'http://data.fixer.io/api/';\n  const access_key = '2fe0ad1d7c24d0016498ef8ec7b86137';\n  const [symbols, setSymbols] = useState({});\n  let [timeseries, SetTimeseries] = useState({\n    startDate: new Date(),\n    endDate: new Date()\n  });\n  const data = [{\n    name: 'Page A',\n    uv: 400,\n    pv: 2400,\n    amt: 2400\n  }, {\n    name: 'Page B',\n    uv: 200,\n    pv: 2400,\n    amt: 2400\n  }, {\n    name: 'Page C',\n    uv: 300,\n    pv: 2400,\n    amt: 2400\n  }, {\n    name: 'Page D',\n    uv: 230,\n    pv: 2400,\n    amt: 2400\n  }, {\n    name: 'Page E',\n    uv: 404,\n    pv: 2400,\n    amt: 2400\n  }];\n  useEffect(() => {\n    getSymbols();\n  }, []);\n\n  function getRates() {\n    axios.get(`${url}latest?access_key=${access_key}`).then(res => {\n      console.log(res);\n    });\n  }\n\n  function getRatesTimeSeries() {\n    axios.get(`${url}timeseries?access_key=${access_key}&start_date=${timeseries.startDate}&end_date=${timeseries.endDate}`).then(res => {\n      console.log(res);\n    });\n  }\n\n  function getSymbols() {\n    axios.get(`${url}symbols?access_key=${access_key}`).then(res => {\n      if (res.status === 200) {\n        var _res$data;\n\n        setSymbols((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.symbols);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 600,\n        height: 300,\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"uv\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"#ccc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          getRatesTimeSeries();\n        },\n        children: \"Obtener datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Elige las divisas a mostrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-wrapper\",\n        children: Object.keys(symbols).map(symbol => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"check-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: 'checkbox'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eI6jIJhcU939/nDkNyAWKmvwvxI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abrahamtalavera/Projects/rates/rates/src/App.js"],"names":["useState","useEffect","axios","LineChart","Line","CartesianGrid","XAxis","YAxis","Navbar","DatePicker","App","url","access_key","symbols","setSymbols","timeseries","SetTimeseries","startDate","Date","endDate","data","name","uv","pv","amt","getSymbols","getRates","get","then","res","console","log","getRatesTimeSeries","status","Object","keys","map","symbol"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport Navbar from './components/navbar/Navbar';\nimport DatePicker from './components/datePicker/DatePicker';\n\nfunction App() {\n  const url = 'http://data.fixer.io/api/'\n  const access_key = '2fe0ad1d7c24d0016498ef8ec7b86137'\n  const [symbols,setSymbols] = useState({});\n  let [timeseries,SetTimeseries] = useState({startDate: new Date(), endDate: new Date()})\n  const data = [{name: 'Page A', uv: 400, pv: 2400, amt: 2400},{name: 'Page B', uv: 200, pv: 2400, amt: 2400},{name: 'Page C', uv: 300, pv: 2400, amt: 2400},{name: 'Page D', uv: 230, pv: 2400, amt: 2400},{name: 'Page E', uv: 404, pv: 2400, amt: 2400}];\n\n\n  useEffect(()=>{\n    getSymbols()\n  },[])\n\n  function getRates(){\n    axios.get(`${url}latest?access_key=${access_key}`)\n    .then(res => {\n      console.log(res);\n    })\n  }\n\n  function getRatesTimeSeries(){\n    axios.get(`${url}timeseries?access_key=${access_key}&start_date=${timeseries.startDate}&end_date=${timeseries.endDate}`)\n    .then(res => {\n      console.log(res)\n    })\n  }\n\n  function getSymbols(){\n    axios.get(`${url}symbols?access_key=${access_key}`)\n    .then(res => {\n      if ( res.status === 200 ){\n        setSymbols(res.data?.symbols);\n      }\n    })\n  }\n  \n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <header className=\"App-header\">\n      <DatePicker />\n      <LineChart width={600} height={300} data={data}>\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n        <CartesianGrid stroke=\"#ccc\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n      </LineChart>\n        <button onClick={() => {getRatesTimeSeries()}} >Obtener datos</button>\n      </header>\n      <section className='Sidebar'>\n      <h6>Elige las divisas a mostrar</h6>\n      <div className='check-wrapper'>\n        {Object.keys(symbols).map((symbol)=> {\n            return(\n            <div className='check-item'>\n                <input type={'checkbox'} />\n                <label>{symbol}</label>  \n            </div>)\n          })} \n      </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}