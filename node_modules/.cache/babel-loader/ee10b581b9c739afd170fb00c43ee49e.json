{"ast":null,"code":"import _toConsumableArray from\"/Users/abrahamtalavera/Projects/rates/rates/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/abrahamtalavera/Projects/rates/rates/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/abrahamtalavera/Projects/rates/rates/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import axios from'axios';import{Line,XAxis,YAxis,Legend,Tooltip,LineChart,CartesianGrid}from'recharts';import'./plotForm.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function PlotForm(){var url='http://data.fixer.io/api/';var access_key='2fe0ad1d7c24d0016498ef8ec7b86137';var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dates=_useState2[0],setDates=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),dummy=_useState4[0],setDummy=_useState4[1];function getHistoricalRates(date){axios.get(\"\".concat(url).concat(date,\"?access_key=\").concat(access_key,\"&symbols=\",'CAD,USD,GBP,AUD')).then(function(res){var newArray=[];var newObject=_objectSpread({},res.data.rates);newObject.date=res.data.date;newArray=dummy;newArray.push(newObject);setDummy(_toConsumableArray(newArray));});}function handleDatePicker(e){var value=e.target.value;setDates([].concat(_toConsumableArray(dates),[value]));}function handlePlot(){if(dates.length>0){dates.map(function(date){return getHistoricalRates(date);});}else{console.log('Seleccione fecha');}}function handleClean(){setDates([]);setDummy([]);}return/*#__PURE__*/_jsxs(\"div\",{className:\"plotForm-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rates-header\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Indicate 4 dates:\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){return e.preventDefault();},children:[/*#__PURE__*/_jsx(\"input\",{type:\"date\",onChange:handleDatePicker}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePlot,className:\"button-form-plot\",children:\"Plot\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClean,className:\"button-form-transparent\",children:\"Clean\"})]})]})]}),dates.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Dates selected\"}),dates.map(function(date,index){return/*#__PURE__*/_jsx(\"p\",{children:date},index);})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"plot-container\",children:/*#__PURE__*/_jsxs(LineChart,{width:600,height:300,data:dummy,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",angle:30,tick:{stroke:'#000080',strokeWidth:0.5},label:\"Fecha\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"4 1 2\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"AUD\",stroke:\"#8884d8\"}),/*#__PURE__*/_jsx(Line,{type:\"monotoneX\",dataKey:\"CAD\",stroke:\"#ffa333\"}),/*#__PURE__*/_jsx(Line,{type:\"monotoneY\",dataKey:\"USD\",stroke:\"#8bc34a\"}),/*#__PURE__*/_jsx(Line,{type:\"linear\",dataKey:\"GBP\",stroke:\"red\"})]})})]});}","map":{"version":3,"sources":["/Users/abrahamtalavera/Projects/rates/rates/src/components/plotForm/plotForm.js"],"names":["React","useState","axios","Line","XAxis","YAxis","Legend","Tooltip","LineChart","CartesianGrid","PlotForm","url","access_key","dates","setDates","dummy","setDummy","getHistoricalRates","date","get","then","res","newArray","newObject","data","rates","push","handleDatePicker","e","value","target","handlePlot","length","map","console","log","handleClean","preventDefault","index","stroke","strokeWidth"],"mappings":"0YAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAUC,IAAV,CAAgBC,KAAhB,CAAuBC,KAAvB,CAA8BC,MAA9B,CAAsCC,OAAtC,CAA+CC,SAA/C,CAA0DC,aAA1D,KAA+E,UAA/E,CACA,MAAO,gBAAP,C,wFAGA,cAAgB,SAASC,CAAAA,QAAT,EAAmB,CAC/B,GAAMC,CAAAA,GAAG,CAAG,2BAAZ,CACA,GAAMC,CAAAA,UAAU,CAAG,kCAAnB,CACA,cAAuBX,QAAQ,CAAC,EAAD,CAA/B,wCAAKY,KAAL,eAAWC,QAAX,eACA,eAAuBb,QAAQ,CAAC,EAAD,CAA/B,yCAAKc,KAAL,eAAWC,QAAX,eAGA,QAASC,CAAAA,kBAAT,CAA4BC,IAA5B,CAAiC,CAC7BhB,KAAK,CAACiB,GAAN,WAAaR,GAAb,SAAmBO,IAAnB,wBAAsCN,UAAtC,aAA4D,iBAA5D,GACCQ,IADD,CACM,SAAAC,GAAG,CAAI,CACT,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,SAAS,kBAAQF,GAAG,CAACG,IAAJ,CAASC,KAAjB,CAAb,CACAF,SAAS,CAACL,IAAV,CAAiBG,GAAG,CAACG,IAAJ,CAASN,IAA1B,CACAI,QAAQ,CAAGP,KAAX,CACAO,QAAQ,CAACI,IAAT,CAAcH,SAAd,EACAP,QAAQ,oBAAKM,QAAL,EAAR,CACH,CARD,EASH,CAED,QAASK,CAAAA,gBAAT,CAA0BC,CAA1B,CAA4B,CACxB,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB,CACAf,QAAQ,8BAAKD,KAAL,GAAYgB,KAAZ,GAAR,CACH,CAED,QAASE,CAAAA,UAAT,EAAqB,CACjB,GAAGlB,KAAK,CAACmB,MAAN,CAAe,CAAlB,CAAqB,CACjBnB,KAAK,CAACoB,GAAN,CAAU,SAAAf,IAAI,CAAI,CACd,MAAOD,CAAAA,kBAAkB,CAACC,IAAD,CAAzB,CACH,CAFD,EAGH,CAJD,IAIO,CACHgB,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACH,CACJ,CAED,QAASC,CAAAA,WAAT,EAAsB,CAClBtB,QAAQ,CAAC,EAAD,CAAR,CACAE,QAAQ,CAAC,EAAD,CAAR,CACH,CAED,mBACI,aAAK,SAAS,CAAC,oBAAf,wBACI,aAAK,SAAS,CAAC,cAAf,wBACI,oCACI,yCADJ,cAEI,cAAM,QAAQ,CAAE,kBAACY,CAAD,QAAOA,CAAAA,CAAC,CAACS,cAAF,EAAP,EAAhB,wBACI,cAAO,IAAI,CAAE,MAAb,CAAqB,QAAQ,CAAEV,gBAA/B,EADJ,cAEI,oCACI,eAAQ,OAAO,CAAEI,UAAjB,CAA6B,SAAS,CAAC,kBAAvC,kBADJ,cAEI,eAAQ,OAAO,CAAEK,WAAjB,CAA8B,SAAS,CAAC,yBAAxC,mBAFJ,GAFJ,GAFJ,GADJ,CAWKvB,KAAK,CAACmB,MAAN,CAAe,CAAf,eACG,oCACI,sCADJ,CAEKnB,KAAK,CAACoB,GAAN,CAAU,SAACf,IAAD,CAAOoB,KAAP,CAAiB,CACxB,mBAAO,mBAAgBpB,IAAhB,EAAQoB,KAAR,CAAP,CACH,CAFA,CAFL,GAZR,GADJ,cAqBI,YAAK,SAAS,CAAC,gBAAf,uBACI,MAAC,SAAD,EAAW,KAAK,CAAE,GAAlB,CAAuB,MAAM,CAAE,GAA/B,CAAoC,IAAI,CAAEvB,KAA1C,wBACA,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,CAAsB,KAAK,CAAE,EAA7B,CAAiC,IAAI,CAAE,CAACwB,MAAM,CAAE,SAAT,CAAoBC,WAAW,CAAE,GAAjC,CAAvC,CAA8E,KAAK,CAAE,OAArF,EADA,cAEA,KAAC,KAAD,IAFA,cAGA,KAAC,aAAD,EAAe,eAAe,CAAC,OAA/B,EAHA,cAIA,KAAC,OAAD,IAJA,cAKA,KAAC,MAAD,IALA,cAMA,KAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,KAA9B,CAAoC,MAAM,CAAC,SAA3C,EANA,cAOA,KAAC,IAAD,EAAM,IAAI,CAAC,WAAX,CAAuB,OAAO,CAAC,KAA/B,CAAqC,MAAM,CAAC,SAA5C,EAPA,cAQA,KAAC,IAAD,EAAM,IAAI,CAAC,WAAX,CAAuB,OAAO,CAAC,KAA/B,CAAqC,MAAM,CAAC,SAA5C,EARA,cASA,KAAC,IAAD,EAAM,IAAI,CAAC,QAAX,CAAoB,OAAO,CAAC,KAA5B,CAAkC,MAAM,CAAC,KAAzC,EATA,GADJ,EArBJ,GADJ,CAsCH","sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport {  Line, XAxis, YAxis, Legend, Tooltip, LineChart, CartesianGrid } from 'recharts';\nimport './plotForm.css'\n\n\nexport default  function PlotForm(){\n    const url = 'http://data.fixer.io/api/'\n    const access_key = '2fe0ad1d7c24d0016498ef8ec7b86137'\n    let [dates,setDates] = useState([]);\n    let [dummy,setDummy] = useState([]);\n\n\n    function getHistoricalRates(date){\n        axios.get(`${url}${date}?access_key=${access_key}&symbols=${'CAD,USD,GBP,AUD'}`)\n        .then(res => {\n            let newArray = []\n            let newObject = { ...res.data.rates  }\n            newObject.date = res.data.date\n            newArray = dummy\n            newArray.push(newObject)\n            setDummy([...newArray]);\n        })\n    }\n\n    function handleDatePicker(e){\n        const value = e.target.value\n        setDates([...dates, value])\n    }\n\n    function handlePlot(){\n        if(dates.length > 0) {\n            dates.map(date => {\n                return getHistoricalRates(date);\n            })\n        } else {\n            console.log('Seleccione fecha')\n        }\n    }\n\n    function handleClean(){\n        setDates([]);\n        setDummy([]);\n    }\n\n    return(\n        <div className=\"plotForm-container\">\n            <div className=\"rates-header\">\n                <div>\n                    <h4>Indicate 4 dates:</h4>\n                    <form onSubmit={(e) => e.preventDefault()}>\n                        <input type={\"date\"} onChange={handleDatePicker} />\n                        <div>\n                            <button onClick={handlePlot} className='button-form-plot'>Plot</button>\n                            <button onClick={handleClean} className='button-form-transparent'>Clean</button>\n                        </div>\n                    </form>\n                </div>\n                {dates.length > 0 && \n                    <div>\n                        <h4>Dates selected</h4>\n                        {dates.map((date, index) => {\n                            return <p key={index}>{date}</p>\n                        })}\n                    </div>\n                }\n            </div>\n            <div className=\"plot-container\">\n                <LineChart width={600} height={300} data={dummy}>\n                <XAxis dataKey=\"date\" angle={30} tick={{stroke: '#000080', strokeWidth: 0.5}} label={\"Fecha\"} />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"4 1 2\" />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"AUD\" stroke=\"#8884d8\" />\n                <Line type=\"monotoneX\" dataKey=\"CAD\" stroke=\"#ffa333\" />\n                <Line type=\"monotoneY\" dataKey=\"USD\" stroke=\"#8bc34a\" />\n                <Line type=\"linear\" dataKey=\"GBP\" stroke=\"red\" />\n                </LineChart>\n            </div>\n        </div>\n            \n    )\n}"]},"metadata":{},"sourceType":"module"}