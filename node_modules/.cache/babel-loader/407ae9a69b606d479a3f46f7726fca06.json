{"ast":null,"code":"var _jsxFileName = \"/Users/abrahamtalavera/Projects/rates/rates/src/components/plotForm/plotForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Legend, Tooltip } from 'recharts';\nimport './plotForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlotForm() {\n  _s();\n\n  const url = 'http://data.fixer.io/api/';\n  const access_key = '2fe0ad1d7c24d0016498ef8ec7b86137';\n  let [dates, setDates] = useState([]);\n  let [dummy, setDummy] = useState([]);\n\n  function getHistoricalRates(date) {\n    axios.get(`${url}${date}?access_key=${access_key}&symbols=${'MXN,CAD,USD,GBP'}`).then(res => {\n      let newArray = [];\n      let newObject = { ...res.data.rates\n      };\n      newObject.date = res.data.date;\n      newArray = dummy;\n      newArray.push(newObject);\n      setDummy([...newArray]);\n    });\n  }\n\n  function handleDatePicker(e) {\n    const value = e.target.value;\n    setDates([...dates, value]);\n  }\n\n  function handlePlot() {\n    if (dates.length > 0) {\n      dates.map(date => {\n        return getHistoricalRates(date);\n      });\n    } else {\n      console.log('Seleccione fecha');\n    }\n  }\n\n  function handleClean() {\n    setDates([]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plotForm-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rates-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Indicate 4 dates:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => e.preventDefault(),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            onChange: handleDatePicker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePlot,\n              className: \"button-form\",\n              children: \"Plot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClean,\n              className: \"button-form-transparent\",\n              children: \"Clean\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), dates.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Dates selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), dates.map((date, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: date\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 36\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 600,\n        height: 300,\n        data: dummy,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          angle: 30,\n          tick: {\n            stroke: 'red',\n            strokeWidth: 0.5\n          },\n          label: \"Fecha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"MXN\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotoneX\",\n          dataKey: \"CAD\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotoneY\",\n          dataKey: \"USD\",\n          stroke: \"#000000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"linear\",\n          dataKey: \"GBP\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlotForm, \"sfxbidAzefK/9OCcbapDvdjpFys=\");\n\n_c = PlotForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlotForm\");","map":{"version":3,"sources":["/Users/abrahamtalavera/Projects/rates/rates/src/components/plotForm/plotForm.js"],"names":["React","useState","axios","LineChart","Line","CartesianGrid","XAxis","YAxis","Legend","Tooltip","PlotForm","url","access_key","dates","setDates","dummy","setDummy","getHistoricalRates","date","get","then","res","newArray","newObject","data","rates","push","handleDatePicker","e","value","target","handlePlot","length","map","console","log","handleClean","preventDefault","index","stroke","strokeWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Legend, Tooltip } from 'recharts';\nimport './plotForm.css'\n\n\nexport default  function PlotForm(){\n    const url = 'http://data.fixer.io/api/'\n    const access_key = '2fe0ad1d7c24d0016498ef8ec7b86137'\n    let [dates,setDates] = useState([]);\n    let [dummy,setDummy] = useState([]);\n\n\n    function getHistoricalRates(date){\n        axios.get(`${url}${date}?access_key=${access_key}&symbols=${'MXN,CAD,USD,GBP'}`)\n        .then(res => {\n            let newArray = []\n            let newObject = { ...res.data.rates  }\n            newObject.date = res.data.date\n            newArray = dummy\n            newArray.push(newObject)\n            setDummy([...newArray]);\n        })\n    }\n\n    function handleDatePicker(e){\n        const value = e.target.value\n        setDates([...dates, value])\n    }\n\n    function handlePlot(){\n        if(dates.length > 0) {\n            dates.map(date => {\n                return getHistoricalRates(date);\n            })\n        } else {\n            console.log('Seleccione fecha')\n        }\n    }\n\n    function handleClean(){\n        setDates([]);\n    }\n\n    return(\n        <div className=\"plotForm-container\">\n            <div className=\"rates-header\">\n                <div>\n                    <h4>Indicate 4 dates:</h4>\n                    <form onSubmit={(e) => e.preventDefault()}>\n                        <input type={\"date\"} onChange={handleDatePicker} />\n                        <div>\n                            <button onClick={handlePlot} className='button-form'>Plot</button>\n                            <button onClick={handleClean} className='button-form-transparent'>Clean</button>\n                        </div>\n                    </form>\n                </div>\n                {dates.length > 0 && \n                    <div>\n                        <h4>Dates selected</h4>\n                        {dates.map((date, index) => {\n                            return <p key={index}>{date}</p>\n                        })}\n                    </div>\n                }\n            </div>\n            <div>\n                <LineChart width={600} height={300} data={dummy}>\n                <XAxis dataKey=\"date\" angle={30} tick={{stroke: 'red', strokeWidth: 0.5}} label={\"Fecha\"} />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"MXN\" stroke=\"#8884d8\" />\n                <Line type=\"monotoneX\" dataKey=\"CAD\" stroke=\"#82ca9d\" />\n                <Line type=\"monotoneY\" dataKey=\"USD\" stroke=\"#000000\" />\n                <Line type=\"linear\" dataKey=\"GBP\" stroke=\"#82ca9d\" />\n                </LineChart>\n            </div>\n        </div>\n            \n    )\n}"]},"metadata":{},"sourceType":"module"}