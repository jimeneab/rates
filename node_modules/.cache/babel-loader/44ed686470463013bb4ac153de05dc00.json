{"ast":null,"code":"var _jsxFileName = \"/Users/abrahamtalavera/Projects/rates/rates/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Legend, Tooltip } from 'recharts';\nimport Navbar from './components/navbar/Navbar';\nimport DatePicker from './components/datePicker/DatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const url = 'http://data.fixer.io/api/';\n  const access_key = '2fe0ad1d7c24d0016498ef8ec7b86137';\n  const [symbols, setSymbols] = useState({});\n  const data = [{\n    date: '2020-05-03',\n    CAD: 1.2,\n    MXN: 27,\n    GBP: .88,\n    USD: 1.09\n  }, {\n    date: '2020-05-04',\n    CAD: 1.2,\n    MXN: 27,\n    GBP: .88,\n    USD: 1.09\n  }, {\n    date: '2020-05-05',\n    CAD: 1.2,\n    MXN: 27,\n    GBP: .88,\n    USD: 1.09\n  }, {\n    date: '2020-05-06',\n    CAD: 1.2,\n    MXN: 27,\n    GBP: .88,\n    USD: 1.09\n  }];\n  useEffect(() => {\n    getSymbols();\n  }, []);\n\n  function getRates() {\n    axios.get(`${url}latest?access_key=${access_key}`).then(res => {\n      console.log(res);\n    });\n  }\n\n  function getHistoricalRates() {\n    axios.get(`${url}${'2020-05-03'}?access_key=${access_key}&symbols=${'MXN,CAD,USD,GBP'}`).then(res => {\n      console.log(res);\n    });\n  }\n\n  function getSymbols() {\n    axios.get(`${url}symbols?access_key=${access_key}`).then(res => {\n      if (res.status === 200) {\n        var _res$data;\n\n        setSymbols((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.symbols);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 600,\n        height: 300,\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"#ccc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          angle: 30,\n          tick: {\n            stroke: 'red',\n            strokeWidth: 0.5\n          },\n          label: \"Fecha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"MXN\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotoneX\",\n          dataKey: \"CAD\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotoneY\",\n          dataKey: \"USD\",\n          stroke: \"#000000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"linear\",\n          dataKey: \"GBP\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          getRates();\n        },\n        children: \"Obtener datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          getHistoricalRates();\n        },\n        children: \"convertir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"On/Qs7TU14kAWPb318FJjvkiY0g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abrahamtalavera/Projects/rates/rates/src/App.js"],"names":["useState","useEffect","axios","LineChart","Line","CartesianGrid","XAxis","YAxis","Legend","Tooltip","Navbar","DatePicker","App","url","access_key","symbols","setSymbols","data","date","CAD","MXN","GBP","USD","getSymbols","getRates","get","then","res","console","log","getHistoricalRates","status","stroke","strokeWidth"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Legend, Tooltip } from 'recharts';\nimport Navbar from './components/navbar/Navbar';\nimport DatePicker from './components/datePicker/DatePicker';\n\nfunction App() {\n  const url = 'http://data.fixer.io/api/'\n  const access_key = '2fe0ad1d7c24d0016498ef8ec7b86137'\n  const [symbols,setSymbols] = useState({});\n  const data = [{date: '2020-05-03', CAD: 1.2, MXN: 27, GBP:.88, USD: 1.09},{date: '2020-05-04', CAD: 1.2, MXN: 27, GBP:.88, USD: 1.09},{date: '2020-05-05', CAD: 1.2, MXN: 27, GBP:.88, USD: 1.09},{date: '2020-05-06', CAD: 1.2, MXN: 27, GBP:.88, USD: 1.09}];\n\n\n  useEffect(()=>{\n    getSymbols()\n  },[])\n\n  function getRates(){\n    axios.get(`${url}latest?access_key=${access_key}`)\n    .then(res => {\n      console.log(res);\n    })\n  }\n\n  function getHistoricalRates(){\n    axios.get(`${url}${'2020-05-03'}?access_key=${access_key}&symbols=${'MXN,CAD,USD,GBP'}`)\n    .then(res => {\n      console.log(res);\n    })\n  }\n\n  function getSymbols(){\n    axios.get(`${url}symbols?access_key=${access_key}`)\n    .then(res => {\n      if ( res.status === 200 ){\n        setSymbols(res.data?.symbols);\n      }\n    })\n  }\n  \n  return (\n    <div className=\"App\">\n      <header>\n      <Navbar></Navbar>\n      </header>\n      <section className=\"App-header\">\n      <DatePicker />\n      <LineChart width={600} height={300} data={data}>\n        <CartesianGrid stroke=\"#ccc\" />\n        <XAxis dataKey=\"date\" angle={30} tick={{stroke: 'red', strokeWidth: 0.5}} label={\"Fecha\"} />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"MXN\" stroke=\"#8884d8\" />\n        <Line type=\"monotoneX\" dataKey=\"CAD\" stroke=\"#82ca9d\" />\n        <Line type=\"monotoneY\" dataKey=\"USD\" stroke=\"#000000\" />\n        <Line type=\"linear\" dataKey=\"GBP\" stroke=\"#82ca9d\" />\n      </LineChart>\n        <button onClick={() => {getRates()}} >Obtener datos</button>\n        <button onClick={() => {getHistoricalRates()}} >convertir</button>\n      </section>\n      {/* <section className='Sidebar'>\n      <h6>Elige las divisas a mostrar</h6>\n      <div className='check-wrapper'>\n        {Object.keys(symbols).map((symbol, index)=> {\n            return(\n            <div className='check-item' key={index}>\n                <input type={'checkbox'} />\n                <label>{symbol}</label>  \n            </div>)\n          })} \n      </div>\n      </section> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}